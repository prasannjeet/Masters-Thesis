@incollection{Khakpour2018,
abstract = {In this paper, we propose a new sound method to synthesize a permissive monitor using boolean supervisory controller synthesis that observes a Java program at certain checkpoints, predicts information flow violations and applies suitable countermeasures to prevent violations. To improve the permissiveness, we train the monitor and remove false pos- itives by executing the program along with its executable model. If a security violation is detected, the user can define sound countermeasures, including declassification to apply in the checkpoints. We implement a tool that automates the whole process and generates a monitor. We eval- uate our method by applying it on the Droidbench benchmark and one real-life Android application. 1},
author = {Khakpour, Narges and Skandylas, Charilaos},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-319-99073-6_3},
file = {:C$\backslash$:/Users/prasa.DESKTOP-L7LFCK6/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Khakpour, Skandylas - 2018 - Synthesis of a Permissive Security Monitor.pdf:pdf},
isbn = {9783319990729},
issn = {16113349},
month = {09},
pages = {48--65},
publisher = {Springer, Cham},
title = {{Synthesis of a permissive security monitor}},
%url = {http://link.springer.com/10.1007/978-3-319-99073-6{\_}3},
volume = {11098 LNCS},
year = {2018}
}

@article{Alpernas2018,
abstract = {The rise of serverless computing provides an opportunity to rethink cloud security. We present an approach for securing serverless systems using a novel form of dynamic information flow control (IFC). We show that in serverless applications, the termination channel found in most existing IFC systems can be arbitrarily amplified via multiple concurrent requests, necessitating a stronger termination-sensitive non-interference guarantee, which we achieve using a combination of static labeling of serverless processes and dynamic faceted labeling of persistent data. We describe our implementation of this approach on top of JavaScript for AWS Lambda and OpenWhisk serverless platforms, and present three realistic case studies showing that it can enforce important IFC security properties with low overhead.},
archivePrefix = {arXiv},
arxivId = {1802.08984},
author = {Alpernas, Kalev and Flanagan, Cormac and Fouladi, Sadjad and Ryzhyk, Leonid and Sagiv, Mooly and Schmitz, Thomas and Winstein, Keith},
eprint = {1802.08984},
file = {:C$\backslash$:/Users/prasa.DESKTOP-L7LFCK6/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Alpernas et al. - 2018 - Secure Serverless Computing Using Dynamic Information Flow Control.pdf:pdf},
month = {02},
title = {{Secure Serverless Computing Using Dynamic Information Flow Control}},
%url = {http://arxiv.org/abs/1802.08984},
year = {2018}
}

@InProceedings{Askarov2008,
	author="Askarov, Aslan
	and Hunt, Sebastian
	and Sabelfeld, Andrei
	and Sands, David",
	editor="Jajodia, Sushil
	and Lopez, Javier",
	title="Termination-Insensitive Noninterference Leaks More Than Just a Bit",
	booktitle="Computer Security - ESORICS 2008",
	year="2008",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="333--348",
	doi = {10.1007/978-3-540-88313-5_22},
%	url = {http://link.springer.com/10.1007/978-3-540-88313-5_22},
	abstract="Current tools for analysing information flow in programs build upon ideas going back to Denning's work from the 70's. These systems enforce an imperfect notion of information flow which has become known as termination-insensitive noninterference. Under this version of noninterference, information leaks are permitted if they are transmitted purely by the program's termination behaviour (i.e., whether it terminates or not). This imperfection is the price to pay for having a security condition which is relatively liberal (e.g. allowing while-loops whose termination may depend on the value of a secret) and easy to check. But what is the price exactly? We argue that, in the presence of output, the price is higher than the ``one bit'' often claimed informally in the literature, and effectively such programs can leak all of their secrets. In this paper we develop a definition of termination-insensitive noninterference suitable for reasoning about programs with outputs. We show that the definition generalises ``batch-job'' style definitions from the literature and that it is indeed satisfied by a Denning-style program analysis with output. Although more than a bit of information can be leaked by programs satisfying this condition, we show that the best an attacker can do is a brute-force attack, which means that the attacker cannot reliably (in a technical sense) learn the secret in polynomial time in the size of the secret. If we further assume that secrets are uniformly distributed, we show that the advantage the attacker gains when guessing the secret after observing a polynomial amount of output is negligible in the size of the secret.",
	isbn="978-3-540-88313-5"
}


@misc{GoogleTrends2019,
	author = {{Google Trends}},
	mendeley-groups = {Background},
	title = {{Popularity of the keyword Serverless}},
	url = {https://trends.google.com/trends/explore?date=all{\&}q=serverless},
	urldate = {2019-02-11},
	year = {2019}
}

@misc{Christner2017,
	author = {Christner, Brian},
	booktitle = {Swisscom},
	file = {:D$\backslash$:/OneDrivePs222vt/OneDrive - student.lnu.se/Studies/04 Semester/Master's Thesis/serverless-170406063841.pdf:pdf},
	mendeley-groups = {Background},
	title = {{Docker Serverless}},
	url = {https://pt.slideshare.net/BrianChristner/docker-serverless?from{\_}action=save},
	urldate = {2019-02-11},
	year = {2017}
}

@techreport{Segal2018,
	abstract = {The "Serverless architectures Security Top 10" document is meant to serve as a security awareness and education guide. The document is curated and maintained by top industry practitioners and security researchers with vast experience in application security, cloud and serverless architectures. As many organizations are still exploring serverless architectures, or just making their first steps in the serverless world, we believe that this guide is critical for their success in building robust, secure and reliable applications. We urge all organizations to adopt this document and use it during the process of designing, developing and testing serverless applications in order to minimize security risks. This document will be maintained and enhanced periodically based on input from the community, as well as research and analysis of the most common serverless architecture risks. Lastly, it should be stressed that this document enumerates what are believed to be the current top risks, specific to serverless architectures. Readers are encouraged to always follow secure software design and development best practices.},
	author = {Segal, Ory; Zin Shaked; Shulman Avi},
	file = {::},
	institution = {Puresec},
	mendeley-groups = {Background},
	title = {{The Ten Most Critical Security Risks in Serverless Architectures}},
	year = {2018}
}

@misc{Amazon,
	author = {Amazon},
	mendeley-groups = {Background},
	title = {{AWS Lambda – Serverless Compute - Amazon Web Services}},
	url = {https://aws.amazon.com/lambda/},
	urldate = {2019-02-11}
}
@article{PivotalSoftware2017,
	abstract = {Pivotal combines our cloud-native platform, developer tools, and unique methodology to help the world's largest companies transform the way they build and run their most important applications. Our technology is used by Global 2000 companies to achieve strategic advantages in software development and IT operations.},
	author = {{Pivotal Software}},
	mendeley-groups = {Background},
	month = {jan},
	publisher = {Pivotal Software, Inc.},
	title = {{Pivotal Function Service (PFS)}},
	url = {https://pivotal.io/platform/pivotal-function-service},
	year = {2017}
}
@misc{IBM,
	author = {IBM},
	mendeley-groups = {Background},
	title = {{IBM Cloud Functions}},
	url = {https://console.bluemix.net/openwhisk/},
	urldate = {2019-02-11}
}
@misc{Microsoft,
	author = {Microsoft},
	mendeley-groups = {Background},
	title = {{Azure Functions—Serverless Architecture}},
	url = {https://azure.microsoft.com/en-us/services/functions/},
	urldate = {2019-02-11}
}
@misc{Google,
	author = {Google},
	mendeley-groups = {Background},
	title = {{Cloud Functions - Event-driven Serverless Computing}},
	url = {https://cloud.google.com/functions/},
	urldate = {2019-02-11}
}
@article{Hedin2011,
	author = {Hedin, Daniel and Hedin, Daniel and Sabelfeld, Andrei},
	file = {:D$\backslash$:/OneDrivePs222vt/OneDrive - student.lnu.se/Studies/04 Semester/Master's Thesis/10.1.1.437.9981.pdf:pdf},
	mendeley-groups = {Information Flow Control},
	doi = {10.1.1.295.9015},
	title = {{A Perspective on Information-Flow Control}},
%	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.295.9015},
	year = {2011}
}
@article{Denning1976,
	author = {Denning, Dorothy E. and E., Dorothy},
	doi = {10.1145/360051.360056},
%	issn = {00010782},
	journal = {Communications of the ACM},
	keywords = {information flow,lattice,program certification,protection,security,security class},
	mendeley-groups = {Information Flow Control},
	month = {05},
	number = {5},
	pages = {236--243},
	publisher = {ACM},
	title = {{A lattice model of secure information flow}},
%	url = {http://portal.acm.org/citation.cfm?doid=360051.360056},
	volume = {19},
	year = {1976}
}
@article{Sabelfeld2001,
	author = {Sabelfeld, Andrei and Sands, David},
	doi = {10.1023/A:1011553200337},
	file = {::},
%	issn = {13883690},
	journal = {Higher-Order and Symbolic Computation},
	mendeley-groups = {TINI},
	number = {1},
	pages = {59--91},
	publisher = {Kluwer Academic Publishers},
	title = {{A Per Model of Secure Information Flow in Sequential Programs}},
%	url = {http://link.springer.com/10.1023/A:1011553200337},
	volume = {14},
	year = {2001}
}
@article{Mettler2014,
	author = {Mettler, Tobias and Eurich, Markus and Winter, Robert},
	doi = {10.17705/1CAIS.03410},
	file = {:D$\backslash$:/OneDrivePs222vt/OneDrive - student.lnu.se/Studies/04 Semester/Master's Thesis/aisel.aisnet.org@caisvol34iss110.pdf:pdf},
%	issn = {15293181},
	journal = {Communications of the Association for Information Systems},
	mendeley-groups = {Design Science},
	month = {01},
	number = {1},
	title = {{On the Use of Experiments in Design Science Research: A Proposition of an Evaluation Framework}},
%	url = {https://aisel.aisnet.org/cais/vol34/iss1/10},
	volume = {34},
	year = {2014}
}
@article{March1995,
	abstract = {Research in IT must address the design tasks faced by practitioners. Real problems must be properly conceptualized and represented, appropriate techniques for their solution must be constructed, and solutions must be implemented and evaluated using appropriate criteria. If significant progress is to be made, IT research must also develop an understanding of how and why IT systems work or do not work. Such an understanding must tie together natural laws governing IT systems with natural laws governing the environments in which they operate. This paper presents a two dimensional framework for research in information technology. The first dimension is based on broad types of design and natural science research activities: build, evaluate, theorize, and justify. The second dimension is based on broad types of outputs produced by design research: representational constructs, models, methods, and instantiations. We argue that both design science and natural science activities are needed to insure that IT research is both relevant and effective.},
	author = {March, Salvatore T. and Smith, Gerald F.},
	doi = {10.1016/0167-9236(94)00041-2},
	file = {:D$\backslash$:/OneDrivePs222vt/OneDrive - student.lnu.se/Studies/04 Semester/Master's Thesis/march1995.pdf:pdf},
%	issn = {0167-9236},
	journal = {Decision Support Systems},
	mendeley-groups = {Design Science},
	month = {12},
	number = {4},
	pages = {251--266},
	publisher = {North-Holland},
	title = {{Design and natural science research on information technology}},
%	url = {https://www.sciencedirect.com/science/article/pii/0167923694000412},
	volume = {15},
	year = {1995}
}
@book{Simon1996,
	abstract = {3rd ed. Continuing his exploration of the organization of complexity and the science of design, this new edition of Herbert Simon's classic work on artificial intelligence adds a chapter that sorts out the current themes and tools -- chaos, adaptive systems, genetic algorithms -- for analyzing complexity and complex systems. There are updates throughout the book as well. These take into account important advances in cognitive psychology and the science of design while confirming and extending the book's basic thesis: that a physical symbol system has the necessary and sufficient means for intelligent action. The chapter "Economic Reality" has also been revised to reflect a change in emphasis in Simon's thinking about the respective roles of organizations and markets in economic systems. 1. Understanding the Natural and Artificial Worlds -- 2. Economic Rationality: Adaptive Artifice -- 3. The Psychology of Thinking: Embedding Artifice in Nature -- 4. Remembering and Learning: Memory as Environment for Thought -- 5. The Science of Design: Creating the Artificial -- 6. Social Planning: Designing the Evolving Artifact -- 7. Alternative Views of Complexity -- 8. The Architecture of Complexity: Hierarchic Systems.},
	author = {Simon, Herbert A.},
	isbn = {0262193744},
	mendeley-groups = {Design Science},
	pages = {231},
	publisher = {MIT Press},
	title = {{The sciences of the artificial}},
	year = {1996}
}
@misc{Hagelback2019,
	author = {Hagelback, Johan},
	booktitle = {LNU},
	mendeley-groups = {Design Science},
	title = {{Design Science - Degree Projects in Computer Science}},
	url = {https://coursepress.lnu.se/subject/thesis-projects/design-science/},
	urldate = {2019-02-11},
	year = {2019}
}
@article{Nunamaker1990,
	abstract = {Abstract:In this paper, the use of systems development as a methodology in information systems (is) research is described and defended. A framework to explain the nature of systems development as a research methodology in is research is proposed. Use of this methodology in the engineering field in general is compared with its use specifically in computer science and computer engineering. An integrated program for conducting is research that incorporates theory building, systems development, experimentation, and observation is proposed. Progress in several application domains is reviewed to provide a basis upon which to argue that systems development is a valid research methodology. A systems development research process is presented from a methodological perspective. Software engineering, which is the basic method of applying the systems development research methodology, is then discussed. It is the authors' belief that systems development and other research methodologies are complementary and that an int...},
	author = {Nunamaker, Jay F. and Chen, Minder and Purdin, Titus D.M.},
	doi = {10.1080/07421222.1990.11517898},
%	issn = {0742-1222},
	journal = {Journal of Management Information Systems},
	keywords = {research methodology,software engineering,systems development},
	mendeley-groups = {Design Science},
	month = {12},
	number = {3},
	pages = {89--106},
	publisher = {Routledge},
	title = {{Systems Development in Information Systems Research}},
%	url = {https://www.tandfonline.com/doi/full/10.1080/07421222.1990.11517898},
	volume = {7},
	year = {1990}
}
@misc{Waterworth2018,
	author = {Waterworth, Steve},
	booktitle = {Instana},
	mendeley-groups = {Background},
	title = {{Introduction to Serverless Computing}},
	url = {https://www.instana.com/blog/introduction-to-serverless-computing/},
	urldate = {2019-02-16},
	year = {2018}
}
@INPROCEEDINGS{Sabelfeld2005, 
	author={A. {Sabelfeld} and D. {Sands}}, 
	booktitle={18th IEEE Computer Security Foundations Workshop (CSFW'05)}, 
	title={Dimensions and principles of declassification}, 
	year={2005}, 
	volume={}, 
	number={}, 
	pages={255-269}, 
	keywords={security of data;declassification dimensions;declassification principles;sensitive information declassification;information release mechanism;secret information extraction;Information security;Remuneration;Data mining;Roads;Protocols;Credit cards;Databases;Computer science;World Wide Web;Lead}, 
	doi={10.1109/CSFW.2005.15}, 
	ISSN={1063-6900}, 
	month={June},
}
@INPROCEEDINGS{Gougen1982, 
	author={J. A. {Goguen} and J. {Meseguer}}, 
	booktitle={1982 IEEE Symposium on Security and Privacy}, 
	title={Security Policies and Security Models}, 
	year={1982}, 
	volume={}, 
	number={}, 
	pages={11-11}, 
	keywords={Computational modeling;Automata;Finite element methods;Mathematical model;Data models;Computers;Message systems}, 
	doi={10.1109/SP.1982.10014}, 
	ISSN={1540-7993}, 
	month={April},
}
@article{Myers2000,
	author = {Myers, Andrew C. and Liskov, Barbara},
	title = {Protecting Privacy Using the Decentralized Label Model},
	journal = {ACM Trans. Softw. Eng. Methodol.},
	issue_date = {Oct. 2000},
	volume = {9},
	number = {4},
	month = oct,
	year = {2000},
	issn = {1049-331X},
	pages = {410--442},
	numpages = {33},
	url = {http://doi.acm.org/10.1145/363516.363526},
	doi = {10.1145/363516.363526},
	acmid = {363526},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {confidentiality, declassification, downgrading, end-to-end, information flow controls, integrity, lattice, policies, principals, roles, type checking},
} 
@inproceedings{Krohn2007,
	author = {Krohn, Maxwell and Yip, Alexander and Brodsky, Micah and Cliffer, Natan and Kaashoek, M. Frans and Kohler, Eddie and Morris, Robert},
	title = {Information Flow Control for Standard OS Abstractions},
	booktitle = {Proceedings of Twenty-first ACM SIGOPS Symposium on Operating Systems Principles},
	series = {SOSP '07},
	year = {2007},
	isbn = {978-1-59593-591-5},
	location = {Stevenson, Washington, USA},
	pages = {321--334},
	numpages = {14},
	url = {http://doi.acm.org/10.1145/1294261.1294293},
	doi = {10.1145/1294261.1294293},
	acmid = {1294293},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {DIFC, decentralized information flow control, endpoints, reference monitor, system call interposition, web services},
} 
@INPROCEEDINGS{Shroff2007, 
	author={P. {Shroff} and S. {Smith} and M. {Thober}}, 
	booktitle={20th IEEE Computer Security Foundations Symposium (CSF'07)}, 
	title={Dynamic Dependency Monitoring to Secure Information Flow}, 
	year={2007}, 
	volume={}, 
	number={}, 
	pages={203-217}, 
	keywords={security of data;dynamic dependency monitoring;information flow security;run-time information flow monitoring;Runtime;Information security;Data security;Information analysis;Computerized monitoring;Computer security;Computer science;Concrete;Java;Terminology}, 
	doi={10.1109/CSF.2007.20}, 
	ISSN={1063-6900}, 
	month={July},
}
@INPROCEEDINGS{Russo2010, 
	author={A. {Russo} and A. {Sabelfeld}}, 
	booktitle={2010 23rd IEEE Computer Security Foundations Symposium}, 
	title={Dynamic vs. Static Flow-Sensitive Security Analysis}, 
	year={2010}, 
	volume={}, 
	number={}, 
	pages={186-199}, 
	keywords={data flow analysis;security of data;system monitoring;static flow-sensitive security analysis;dynamic flow-sensitive security analysis;flow-sensitive static information-flow analysis;flow-insensitive static analysis;secure program;dynamic information-flow control;dynamic information-flow monitor;security semantics;information flow;security guarantee;termination-insensitive noninterference;Monitoring;Security;Semantics;Instruments;Sensitivity;Context;Performance analysis}, 
	doi={10.1109/CSF.2010.20}, 
	ISSN={1063-6900}, 
	month={July},
}
@InProceedings{Guernic2007,
	author="Le Guernic, Gurvan
	and Banerjee, Anindya
	and Jensen, Thomas
	and Schmidt, David A.",
	editor="Okada, Mitsu
	and Satoh, Ichiro",
	title="Automata-Based Confidentiality Monitoring",
	booktitle="Advances in Computer Science - ASIAN 2006. Secure Software and Related Issues",
	year="2007",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="75--89",
	abstract="Non-interference is typically used as a baseline security policy to formalize confidentiality of secret information manipulated by a program. In contrast to static checking of non-interference, this paper considers dynamic, automaton-based, monitoring of information flow for a single execution of a sequential program. The monitoring mechanism is based on a combination of dynamic and static analyses. During program execution, abstractions of program events are sent to the automaton, which uses the abstractions to track information flows and to control the execution by forbidding or editing dangerous actions. The mechanism proposed is proved to be sound, to preserve executions of well-typed programs (in the security type system of Volpano, Smith and Irvine), and to preserve some safe executions of ill-typed programs.",
	isbn="978-3-540-77505-8"
}
@article{BERTHIER201446,
	title = "Discrete Controller Synthesis for Infinite State Systems with ReaX",
	journal = "IFAC Proceedings Volumes",
	volume = "47",
	number = "2",
	pages = "46 - 53",
	year = "2014",
	note = "12th IFAC International Workshop on Discrete Event Systems (2014)",
	issn = "1474-6670",
	doi = "https://doi.org/10.3182/20140514-3-FR-4046.00099",
	url = "http://www.sciencedirect.com/science/article/pii/S1474667015373791",
	author = "Nicolas Berthier and Hervé Marchand",
	keywords = "Control synthesis, automata with infinite variables, synchronous paradigm",
	abstract = "In this paper, we investigate the control of infinite reactive synchronous systems modeled by arithmetic symbolic transition systems for safety properties. We provide effective algorithms allowing to solve the safety control problem, and report on experiments based on ReaX, our tool implementing these algorithms."
}